import numpy as np

def inverse_matrix_method(A, b):
    """
    Mencari solusi sistem persamaan linear menggunakan metode matriks balikan.
    
    Parameters:
        A (numpy.ndarray): Matriks koefisien (m x n).
        b (numpy.ndarray): Vektor konstanta (m x 1).
    
    Returns:
        numpy.ndarray: Solusi dari sistem persamaan linear (n x 1).
    """
    A_inv = np.linalg.inv(A)
    x = np.dot(A_inv, b)
    return x

def test_inverse_matrix_method():
    # Uji ke 1
    A1 = np.array([[2, 1], [1, -1]])
    b1 = np.array([4, 1])
    expected1 = np.array([3., 1.])
    result1 = inverse_matrix_method(A1, b1)
    assert np.allclose(result1, expected1), f"Kasus uji 1 gagal: Hasil yang diharapkan {expected1}, tetapi diperoleh {result1}"

    # Uji ke 2
    A2 = np.array([[3, -2, 5], [2, 6, -8], [1, 5, -6]])
    b2 = np.array([9, 3, 4])
    expected2 = np.array([2., 1., 1.])
    result2 = inverse_matrix_method(A2, b2)
    assert np.allclose(result2, expected2), f"Kasus uji 2 gagal: Hasil yang diharapkan {expected2}, tetapi diperoleh {result2}"

    print("Semua Uji berhasil.")

if __name__ == "__main__":
    test_inverse_matrix_method()
